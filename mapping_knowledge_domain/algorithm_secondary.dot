digraph algorithm_secondary { // 校赛压轴及省赛中等难度
    node[shape=record]
    rankdir=LR

    subgraph basic {
        basic[label="基本算法"];
        stl[label="C++的标准模版库的应用"];
        stl -> poj3096;
        stl -> poj3007;
        simple_algo[label="较为复杂的模拟题的训练"];
        simple_algo -> poj3393;
        simple_algo -> poj1472;
        simple_algo -> poj3371;
        simple_algo -> poj1027;
        simple_algo -> poj2706;

        basic -> stl;
        basic -> simple_algo;
    }

    subgraph graph_algorithm {
        graph_algorithm[label="图算法"];
        differential_constraint_system[label="差分约束系统的建立和求解"];
        differential_constraint_system -> poj1201;
        differential_constraint_system -> poj2983;
        mcmf[label="最小费用最大流"];
        mcmf -> poj2516;
        mcmf -> poj2195;
        biconnected_component[label="双连通分量"];
        biconnected_component -> poj2942;
        strongly_connected_components[label="强连通分支及其缩点"];
        strongly_connected_components -> poj2186;
        cut_edge_point[label="图的割边和割点"];
        cut_edge_point -> poj3352;
        network_flow[label="最小割模型、网络流规约"];
        network_flow -> poj3308;

        graph_algorithm -> differential_constraint_system;
        graph_algorithm -> mcmf;
        graph_algorithm -> biconnected_component;
        graph_algorithm -> strongly_connected_components;
        graph_algorithm -> cut_edge_point;
        graph_algorithm -> network_flow;
    }

    subgraph data_structure {
        data_structure[label="数据结构"];
        segment_tree[label="线段树"];
        segment_tree -> poj2528;
        segment_tree -> poj2828;
        segment_tree -> poj2777;
        segment_tree -> poj2886;
        segment_tree -> poj2750;
        binary_search_tree[label="静态二叉检索树"];
        binary_search_tree -> poj2482;
        binary_search_tree -> poj2352;
        tree_array[label="树状数组"];
        tree_array -> poj1195;
        tree_array -> poj3321;
        RMQ -> poj3264;
        RMQ -> poj3368;
        union_find_set[label="并查集的高级应用"];
        union_find_set -> poj1703;
        union_find_set -> poj2492;
        KMP -> poj2406;
        KMP -> poj1961;

        data_structure -> segment_tree;
        data_structure -> binary_search_tree;
        data_structure -> tree_array;
        data_structure -> RMQ;
        data_structure -> union_find_set;
        data_structure -> KMP;
    }


}